name: CI/CD Pipeline
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  continuous-integration:
    runs-on: ubuntu-22.04
    steps:
      # Step 1
      - uses: actions/checkout@v4
      # Step 2
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      # Step 3
      - name: Build Application and Run unit Test
        run: mvn --batch-mode --update-snapshots verify --file service/pom.xml
      # Step 4
      - name: Package Application
        run: mkdir staging && cp service/target/*.jar staging
      # Step 5
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Package
          path: staging
      # Step 6-
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          # Identify if this is a pre release by checking if the tag name contains -rc, -b, -a
          prerelease: ${{ contains(github.ref, '-rc') || contains(github.ref, '-b') || contains(github.ref, '-a') }}
          files: staging/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
  continuous-deployment:
    runs-on: ubuntu-22.04
    needs: [continuous-integration]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
     # Step 1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
     # Step 2
      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name Git_Application \
            --deployment-group-name development_gropup \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}
